# Generated by Django 3.2.13 on 2022-09-12 23:27

import auto_prefetch
import django.db.models.deletion
import django.db.models.manager
from django.db import migrations, models

import softskillspace.utils.strings


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('lesson', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LessonPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name_on_card', models.CharField(max_length=50, null=True)),
                ('reference_no', models.CharField(default=softskillspace.utils.strings.generate_ref_no, max_length=8)),
                ('transaction_id', models.CharField(max_length=30)),
                ('amount_paid', models.CharField(default='0', max_length=15)),
                ('amount_gross', models.CharField(default='0', max_length=15)),
                ('amount_fee', models.CharField(default='0', max_length=15)),
                ('amount_net', models.CharField(default='0', max_length=15)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid')], default='pending', max_length=15)),
                ('payment_type', models.CharField(blank=True, max_length=15, null=True)),
                ('receipt_url', models.TextField(blank=True, null=True)),
                ('payment_method', models.CharField(choices=[('stripe', 'Stripe'), ('flutterwave', 'Flutterwave'), ('point', 'Soft Point')], default='stripe', max_length=20)),
                ('paid_tutor', models.BooleanField(default=False)),
                ('lesson', auto_prefetch.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lesson.lesson')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
